function defaults = sdarGetDefaults()
% Returns the defaults for spindle detection
%
% Parameters:
%
%     defaults     a structure with the parameters for the default types
%                  in the form of a structure that has fields
%                     value: default value
%                     classes:   classes that the parameter belongs to
%                     attributes:  attributes of the parameter
%                     description: description of parameter
%

defaults = struct( ...
    'sdarBaseFrequencies', ...
    getRules([1, 35], ...
    {'numeric'}, {'row', 'positive'}, ... 
    'Two element-vector with initial filtering limits.'), ...
    'sdarDiscountRate', ...
    getRules(0.001, ...
    {'numeric'}, {'nonnegative'}, ... 
    'Discount factor in the discounted AR model.'), ...
    'sdarFrequencies', ...
    getRules([6, 12], ...
    {'numeric'}, {'row', 'positive'}, ... 
    'Frequency range to filter.'), ...
    'sdarInitialPoints', ...
    getRules(1:100, ...
    {'numeric'}, {'row', 'positive'}, ... 
    'Signal indices to use in initial model estimate.'), ...
    'sdarModelOrder', ...
    getRules(1, ...
    {'numeric'}, {'row', 'positive'}, ... 
    'AR model order for the SDAR algorithm.'), ...
    'sdarThresholds', ...
       getRules([0, power(10, -5:1:-2), 0.02:0.01:0.1, 0.2:0.1:1], ...
         {'numeric'}, {'row', 'nonnegative', '<=', 1}, ... 
    'Thresholds to test in determining the spindles.'), ...
    'sdarSmoothWindow', ...
    getRules(5, ...
    {'numeric'}, {'positive', 'odd'}, ... 
     'Window size for smooth loss function.') ...
    ); 

end

function s = getRules(value, classes, attributes, description)
% Construct the default structure
s = struct('value', [], 'classes', [], ...
    'attributes', [], 'description', []);
s.value = value;
s.classes = classes;
s.attributes = attributes;
s.description = description;
end