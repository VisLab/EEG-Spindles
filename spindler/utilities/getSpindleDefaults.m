function defaults = getSpindleDefaults()
% Returns the defaults for spindle detection
%
% Parameters:
%
%     defaults     a structure with the parameters for the default types
%                  in the form of a structure that has fields
%                     value: default value
%                     classes:   classes that the parameter belongs to
%                     attributes:  attributes of the parameter
%                     description: description of parameter
%

defaults = struct( ...
    'gaborFrequencies', ...
    getRules(6:14, ...
    {'numeric'}, {'row', 'positive'}, ... 
    'Frequencies of the atoms in the Gabor dictionary.'), ...
    'gaborScales', ...
    getRules([0.125, 0.25, 0.5], ...
    {'numeric'}, {'row', 'positive'}, ... 
    'Scales of the atoms (2*SD) in the Gabor dictionary.'), ...
    'gaborSupportFactor', ...
    getRules(3.0, {'numeric'}, ...
    {'positive', 'scalar'}, ...
    'Padding factor on either side based on maximum atom support.'), ...
    'spindleAtomsPerSecond', ...
    getRules([0.02:0.01:0.2, 0.25:0.05:0.5], ...  %[0.02:0.005:0.15, 0.2:0.1:0.6]
    {'numeric'}, {'row', 'positive'}, ... 
    'Values of atoms per second to try in searching for optimal parameters.'), ...
    'spindleBaseThresholds', ...
    getRules([0, power(10, -5:1:-2), 0.02:0.01:0.1, 0.2:0.1:1], ...
    {'numeric'}, {'row', 'nonnegative'}, ... 
    'Thresholds to test in determining the spindles.'), ...
    'spindleIntersectTolerance', ...
    getRules(0.2, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Timing tolerance in seconds for intersect method of determining spindle match.'), ...
    'spindleMaxVoteChannels', ...
    getRules(3, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Minimum time separating spindles before they are considered distinct.'), ...
    'spindleMinLength', ...
    getRules(0.25, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Minimum spindle length in seconds.'), ...
    'spindleMinSeparation', ...
    getRules(0.25, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Minimum time separating spindles before they are considered distinct.'), ...
    'spindleOverlapMethod', ...
    getRules('union', {'char'}, {}, ...
    ['How to combine spindle events when they overlap ' ...
    'union (default)takes the union while largest takes the longest.']), ...
    'spindleSeconds', ...
    getRules(1.0, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Assumed spindle duration in seconds for computing true negatives.'), ...
    'spindleOnsetTolerance', ...
    getRules(0.5, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Timing tolerance in seconds for onset method of determining spindle match.'), ...
    'spindleTimingTolerance', ...
    getRules(0.2, ...
    {'numeric'}, {'scalar', 'positive'}, ... 
    'Timing tolerance in seconds on either side for timing method of matching spindles.')...
    );
 
end

function s = getRules(value, classes, attributes, description)
% Construct the default structure
s = struct('value', [], 'classes', [], ...
    'attributes', [], 'description', []);
s.value = value;
s.classes = classes;
s.attributes = attributes;
s.description = description;
end